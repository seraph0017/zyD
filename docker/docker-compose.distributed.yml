version: '3.8'

services:
  # Redis 集群 - 消息队列和结果存储
  redis-master:
    image: redis:7-alpine
    container_name: redis-master
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --replica-announce-ip redis-master
    volumes:
      - redis_data:/data
    networks:
      - distributed-net
    restart: unless-stopped

  redis-sentinel:
    image: redis:7-alpine
    container_name: redis-sentinel
    ports:
      - "26379:26379"
    command: >
      sh -c "echo 'port 26379
      sentinel monitor mymaster redis-master 6379 1
      sentinel down-after-milliseconds mymaster 5000
      sentinel failover-timeout mymaster 10000
      sentinel parallel-syncs mymaster 1' > /etc/redis-sentinel.conf &&
      redis-sentinel /etc/redis-sentinel.conf"
    depends_on:
      - redis-master
    networks:
      - distributed-net
    restart: unless-stopped

  # Selenium Grid Hub - 浏览器调度中心
  selenium-hub:
    image: seleniarm/hub:latest
    container_name: selenium-hub
    ports:
      - "4444:4444"
      - "4442:4442"
      - "4443:4443"
    environment:
      - GRID_MAX_SESSION=32
      - GRID_BROWSER_TIMEOUT=300
      - GRID_TIMEOUT=300
      - GRID_NEW_SESSION_WAIT_TIMEOUT=10000
    networks:
      - distributed-net
    restart: unless-stopped

  # API Gateway - 统一入口
  api-gateway:
    build:
      context: .
      dockerfile: docker/Dockerfile.gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - REDIS_URL=redis://redis-master:6379
      - WORKER_NODES=worker-node-1:8000,worker-node-2:8000
    depends_on:
      - redis-master
    networks:
      - distributed-net
    restart: unless-stopped

  # 任务调度器 - 主节点
  task-scheduler:
    build:
      context: .
      dockerfile: docker/Dockerfile.scheduler
    container_name: task-scheduler
    environment:
      - REDIS_URL=redis://redis-master:6379
      - SELENIUM_HUB_URL=http://selenium-hub:4444/wd/hub
      - NODE_TYPE=scheduler
      - MAX_WORKERS=8
    volumes:
      - ./data/screenshots:/app/data/screenshots
      - ./logs:/app/logs
      - ./config:/app/config
    depends_on:
      - redis-master
      - selenium-hub
    networks:
      - distributed-net
    restart: unless-stopped

  # 工作节点 1
  worker-node-1:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    container_name: worker-node-1
    ports:
      - "8001:8000"
    environment:
      - REDIS_URL=redis://redis-master:6379
      - SELENIUM_HUB_URL=http://selenium-hub:4444/wd/hub
      - NODE_TYPE=worker
      - NODE_ID=worker-1
      - MAX_WORKERS=4
    volumes:
      - ./data/screenshots:/app/data/screenshots
      - ./logs:/app/logs
      - ./config:/app/config
    depends_on:
      - redis-master
      - selenium-hub
      - task-scheduler
    networks:
      - distributed-net
    restart: unless-stopped

  # 工作节点 2
  worker-node-2:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    container_name: worker-node-2
    ports:
      - "8002:8000"
    environment:
      - REDIS_URL=redis://redis-master:6379
      - SELENIUM_HUB_URL=http://selenium-hub:4444/wd/hub
      - NODE_TYPE=worker
      - NODE_ID=worker-2
      - MAX_WORKERS=4
    volumes:
      - ./data/screenshots:/app/data/screenshots
      - ./logs:/app/logs
      - ./config:/app/config
    depends_on:
      - redis-master
      - selenium-hub
      - task-scheduler
    networks:
      - distributed-net
    restart: unless-stopped

  # Chrome 浏览器节点 - 可扩展
  chrome-node:
    image: seleniarm/node-chromium:latest
    shm_size: 2gb
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
      - NODE_MAX_INSTANCES=2
      - NODE_MAX_SESSION=2
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    networks:
      - distributed-net
    restart: unless-stopped
    deploy:
      replicas: 3

  # 监控服务
  monitoring:
    build:
      context: .
      dockerfile: docker/Dockerfile.monitoring
    container_name: monitoring
    ports:
      - "9090:9090"
    environment:
      - REDIS_URL=redis://redis-master:6379
    depends_on:
      - redis-master
    networks:
      - distributed-net
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  distributed-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16