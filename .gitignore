# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore the entire .idea directory.
.idea/

# ==========================================
# 项目特定的忽略规则
# ==========================================

# 配置文件 (保护敏感信息)
config.json
config/*.json
!config.example.json
.env.local
.env.production
.env.development

# API密钥和凭证
*.key
*.pem
*.p12
*.pfx
credentials/
secrets/

# 截图和测试文件
screenshots/*.png
screenshots/*.jpg
screenshots/*.jpeg
screenshots/*.gif
!screenshots/.gitkeep
testpng/*.png
testpng/*.jpg
!testpng/.gitkeep

# 日志文件
logs/
*.log
*.log.*
log/

# 临时文件
temp/
tmp/
*.tmp
*.temp

# Chrome相关文件
chromedriver
chromedriver.exe
chrome_temp/
chrome_profile/

# WebDriver缓存
.wdm/
webdriver_cache/

# Selenium相关
selenium-debug.log
geckodriver.log

# AI模型缓存
model_cache/
*.model
*.pkl
*.joblib

# Docker相关
.dockerignore
docker-compose.override.yml
docker-compose.local.yml

# 数据库文件
*.db
*.sqlite
*.sqlite3

# 备份文件
*.bak
*.backup
*.old

# 操作系统相关
# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon?
._*
.Spotlight-V100
.Trashes

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Linux
*~
.nfs*

# IDE相关
# VSCode
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# 性能和调试文件
profile_output.*
*.prof
*.pstats

# 缓存目录
cache/
.cache/
__pycache__/

# 编译文件
*.pyc
*.pyo
*.pyd

# 测试覆盖率
.coverage
htmlcov/
.pytest_cache/

# 文档生成
docs/_build/
docs/build/

# 包管理
requirements-dev.txt
requirements-test.txt

# 本地开发文件
local_*
dev_*
test_local*
debug_*

# 大文件和媒体文件
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.webm
*.mkv

# 压缩文件
*.zip
*.rar
*.7z
*.tar.gz
*.tar.bz2

# 项目特定的忽略
# 如果有特定的配置或数据文件需要忽略，在这里添加config.json
